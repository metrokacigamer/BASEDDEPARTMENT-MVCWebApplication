@using System.Security.Claims
@model UserProfileViewModel
@{
	var isAuthenticated = Model.Id == User.FindFirst(ClaimTypes.NameIdentifier)!.Value;
	var defaultSrc = @"~/images/EEUy6MCU0AErfve.png";
}
<div class="full-content ">
	<div class="middle-panel">
		<div style="position: relative; display: flex; align-items: center;">
			<div style="position: relative; overflow: hidden;">
				<div class="image-container">
					@if (Model.ImgUrl != default)
					{
						<img class="image" src="@Model.ImgUrl" />
					}
					else
					{
						<img class="image" src="@Url.Content(defaultSrc)" />
					}
					@if (isAuthenticated)
					{
						<div class="overlay">
							<span><a asp-action="AddProfilePicture" method="get" class="add-image-text text-decoration-none">Add Image</a></span>
						</div>
					}
				</div>
			</div>
			<div>
				<div class="text-1">
					<span class="font-monospace align-text-bottom usrnm-specific">@Model.UserName</span>
				</div>
			</div>
		</div>
		<div style="height: 20px;" class="border-bottom"></div>


		@if (isAuthenticated)
		{
			<form class="add-content" asp-action="AddPost" asp-controller="Post" method="post">	
				<textarea name="postContent" class="add-post" placeholder="Give us an update or something!" oninput="autoExpand(this)"></textarea>
				<input type="hidden" name="userId" value="@Model.Id" />
				<button type="submit" class="btn btn-outline-primary" style="margin: 20px 0; max-width: 150px;" >Add Post</button>	
			</form>
		}

			<div style="margin-top: 15%;" class="content">
			@if(Model.Posts!.DefaultIfEmpty() == default)
			{
				<div class="no-content">
					<p>No Content Available!</p>
					<p style="color: black; margin-top: 20%; font-size: 0.8rem;">(just yet)</p>
				</div>
			}
			else
			{
				foreach(var post in Model.Posts!)
				{
					<div class="post-content">
						@if (isAuthenticated)
						{	
							@Html.Partial("Profile/_EditDeleteDropDown", post)
						}
						<div class="post">
							@if ((post.UpdatedDate - post.CreatedDate)!.Value.Seconds < 1)
							{
								<div class="date">posted @post.CreatedDate</div>
							}
							else
							{
								<div class="date">edited @post.UpdatedDate</div>
							}
							<span>
								@post.Content
							</span>
						</div>
					</div>
				}
			}
			</div>
	</div>
</div>


<style>
	:root {
		--overlay-size: 40px; /* Define the default size */
	}

	.adjusted-navbar {
		min-width: 5rem;
		text-align: center;
	}

	.overlay-mini {
		line-height: calc(var(--overlay-size) * 40/100);
		width: var(--overlay-size);
		height: var(--overlay-size);
		border-radius: 50%; 
		transition: background-color 0.3s; 
		color: black; 
		overflow: hidden; 
	}

		.overlay-mini:hover {
			background-color: rgba(0, 0, 0, 0.2); /* Change background color on hover */
		}

	.custom-navbar{
		text-align: center;
		align-self: center;
		opacity: 0;
		transition: opacity 0.3s ease;
	}

	.custom-navbar:hover {
		opacity: 1;
		transition: 0.3s ease;
	}


	.post-content {
		margin: 25px 0 25px 0;
		padding: 0 10px 10px 10px;
		display: flex;
		flex-direction: row;
	}

	.date {
		text-align: right;
		font-style: italic;
		font-size: 0.8rem
	}


	.no-content {
		text-align: center;
	}

	.post {
		margin-left: 10px;
		width: 600px;
		min-height: 120px;
		border: solid 1px lightgrey;
		border-radius: 10px;
		border-left: 0;
		border-right: 0;
		border-bottom: 0;
		word-wrap: break-word;
	}

	.content {
		align-self: center;
	}

	.add-post {
		width: 600px;
		min-height: 120px;
		border: solid 1px lightgrey;
		border-radius: 10px;
		margin-top: 50px;
		resize: none;
		overflow: hidden; 
		scrollbar-width: none; 
		-ms-overflow-style: none; 
		scrollbar-color: transparent transparent; 
		scrollbar-width: thin; 
	}
	
	.add-post:focus{
			outline: none; /* Remove the default focus outline */
			border-color: lightgrey; /* Maintain border color */
	}

	.add-content {
		align-self: center;
		font-size: 1rem;
		font-family: Verdana;
		text-align: center;
		display: flex;
		flex-direction: column;
	}

	.full-content {

	}

	.middle-panel {
		display: flex;
		flex-direction: column; 
		margin: 0 5px 5px;
	}

	.middle-panel-upper {
		border-bottom: solid 1px;	
	}

	.text-1 {
		position: absolute;
		bottom: 0;
		height: 40%;
	}

	.usrnm-specific {
		margin-left: 20px;
		font-size: 2rem;
	}

	.image-container {
		position: relative;

		border-radius: 100px;
		overflow: hidden;
	}

	.add-image-text {
		color: black;
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		font-size: 1.2rem;
		text-align: center;
		font-family: 'Nirmala UI';
	}

		.add-image-text:hover {
			color: dimgrey;
			transition: color 0.3s ease;
		}

	.overlay {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 100%;
		height: 50px;
		background-color: rgba(0, 0, 0, 0.5);
		transition: opacity 0.3s ease;
		opacity: 0;
	}

	.image-container:hover .overlay {
		opacity: 1;
	}

	.image {
		width: 200px;
		height: 200px;
		object-fit: cover;
	}
</style>
<script>
	function autoExpand(textarea) {
		textarea.style.height = 'auto';

		textarea.style.height = Math.min(textarea.scrollHeight, 500) + 'px';

		if (textarea.scrollHeight > 500) {
			textarea.style.overflowY = 'auto';
		} else {
			textarea.style.overflowY = 'hidden';
		}
	}
</script>